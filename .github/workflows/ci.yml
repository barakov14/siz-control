name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Подключаем кэш node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci --legacy-peer-deps
#      - run: npx cypress install
      - uses: nrwl/nx-set-shas@v4

      # Запускаем линтер, тесты, сборку
      # - run: npx nx affected -t lint test build e2e

      # 🔥 Кэшируем Firebase CLI (правильная папка)
      - name: 🔥 Кэш Firebase CLI
        id: cache-firebase-tools
        uses: actions/cache@v3
        with:
          path: ~/.cache/firebase
          key: firebase-tools-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      # 🚀 Устанавливаем Firebase CLI (если нет в кеше)
      - name: 🚀 Установка Firebase CLI (если нет в кеше)
        if: steps.cache-firebase-tools.outputs.cache-hit != 'true'
        run: npm install -g firebase-tools

#      # 📢 Добавляем Firebase проект (используем секрет для ID проекта)
#      - name: 🔥 Настройка Firebase проекта
#        env:
#          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
#        run: firebase use --add "$FIREBASE_PROJECT_ID"

      # 🚀 Деплой в Firebase (хостинг)
      - name: 🚀 Деплой в Firebase
        env:
          FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_ADMIN }}
        run: |
          echo "$FIREBASE_SERVICE_ACCOUNT_JSON" > firebase-key.json
          firebase login --non-interactive
          firebase deploy --only hosting --token "$(firebase login:ci --no-localhost)"
